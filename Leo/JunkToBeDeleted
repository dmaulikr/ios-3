//- (NSInteger)requiredHeightForTimeCollectionView {
//
//    NSInteger cellSize = 50; //FIXME: This should not be hardcoded!
//
//    return ceil([[self.coreDataManager availableTimesForDate:self.selectedDate] count] * cellSize / 3.0);
//}

//-(void)updateViewConstraints {
//
//    [super updateViewConstraints];

//    NSLayoutConstraint *leadingDateCollectionViewConstraint = [NSLayoutConstraint constraintWithItem:self.dateCollectionView attribute:NSLayoutAttributeLeading relatedBy:NSLayoutRelationEqual toItem:self.contentView attribute:NSLayoutAttributeLeading multiplier:1.0 constant:0];
//
//    NSLayoutConstraint *trailingDateCollectionViewConstraint = [NSLayoutConstraint constraintWithItem:self.dateCollectionView attribute:NSLayoutAttributeTrailing relatedBy:NSLayoutRelationEqual toItem:self.contentView attribute:NSLayoutAttributeTrailing multiplier:1.0 constant:0];
//
//    [self.contentView addConstraint:leadingDateCollectionViewConstraint];
//    [self.contentView addConstraint:trailingDateCollectionViewConstraint];
//
//    NSLayoutConstraint *leadingContainerViewConstraint = [NSLayoutConstraint constraintWithItem:self.containerView attribute:NSLayoutAttributeLeading relatedBy:NSLayoutRelationEqual toItem:self.view attribute:NSLayoutAttributeLeading multiplier:1.0 constant:0];
//
//    NSLayoutConstraint *trailingContainerViewConstraint = [NSLayoutConstraint constraintWithItem:self.containerView attribute:NSLayoutAttributeTrailing relatedBy:NSLayoutRelationEqual toItem:self.view attribute:NSLayoutAttributeTrailing multiplier:1.0 constant:0];
//
//    [self.view addConstraint:leadingContainerViewConstraint];
//    [self.view addConstraint:trailingContainerViewConstraint];
//
//    NSLayoutConstraint *leadingMonthLabelConstraint = [NSLayoutConstraint constraintWithItem:self.monthLabel attribute:NSLayoutAttributeLeading relatedBy:NSLayoutRelationEqual toItem:self.view attribute:NSLayoutAttributeLeading multiplier:1.0 constant:0];
//
//    NSLayoutConstraint *trailingMonthLabelConstraint = [NSLayoutConstraint constraintWithItem:self.monthLabel attribute:NSLayoutAttributeTrailing relatedBy:NSLayoutRelationEqual toItem:self.view attribute:NSLayoutAttributeTrailing multiplier:1.0 constant:0];
//
//    [self.view addConstraint:leadingMonthLabelConstraint];
//    [self.view addConstraint:trailingMonthLabelConstraint];
//
//    NSLayoutConstraint *leadingButtonViewConstraint = [NSLayoutConstraint constraintWithItem:self.buttonView attribute:NSLayoutAttributeLeading relatedBy:NSLayoutRelationEqual toItem:self.view attribute:NSLayoutAttributeLeading multiplier:1.0 constant:0];
//
//    NSLayoutConstraint *trailingButtonViewConstraint = [NSLayoutConstraint constraintWithItem:self.buttonView attribute:NSLayoutAttributeTrailing relatedBy:NSLayoutRelationEqual toItem:self.view attribute:NSLayoutAttributeTrailing multiplier:1.0 constant:0];
//
//
//    [self.view addConstraint:leadingButtonViewConstraint];
//    [self.view addConstraint:trailingButtonViewConstraint];

//self.coreDataManager.

//}

//-(NSLayoutConstraint *)containerViewHeightConstraint {
//
//    if (!_containerViewHeightConstraint) {
//        _containerViewHeightConstraint = [NSLayoutConstraint constraintWithItem:self.containerView attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEqual toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:200];
//
//        [self.contentView addConstraint:_containerViewHeightConstraint];
//    }
//
//    return _containerViewHeightConstraint;
//}

//-(void)viewDidLayoutSubviews {
//
//    NSArray *visibleIndexPaths = [self.dateCollectionView indexPathsForVisibleItems];
//
//    NSInteger indexForDate = [self.selectedDate daysFrom:[NSDate date]] + 1;
//    NSIndexPath *indexPathForDate = [NSIndexPath indexPathForRow:indexForDate inSection:0];
//
//    if (![visibleIndexPaths containsObject:indexPathForDate]) {
//
//        for (NSIndexPath *indexPath in visibleIndexPaths) {
//
//            NSDate *date = self.dates[indexPath.row];
//
//            if (date.weekday == self.selectedDate.weekday) {
//
//                LEODateCell *cell = (LEODateCell *)[self.dateCollectionView cellForItemAtIndexPath:indexPath];
//                cell.selected = YES;
//            }
//        }
//    }
//
//    for (NSIndexPath *indexPath in visibleIndexPaths) {
//
//        NSDate *date = self.dates[indexPath.row];
//
//        if ([date isEarlierThanOrEqualTo:self.selectedDate.endOfDay] && [date isLaterThanOrEqualTo:self.selectedDate.beginningOfDay] ) {
//
//            LEODateCell *cell = (LEODateCell *)[self.dateCollectionView cellForItemAtIndexPath:indexPath];
//            cell.selected = YES;
//        }
//
//    }
//}

//        }
////            NSInteger indexForDate = [self.selectedDate daysFrom:[NSDate date]] + 1;
////            NSIndexPath *indexPathForDate = [NSIndexPath indexPathForRow:indexForDate inSection:0];
////
////            [self.dateCollectionView scrollToItemAtIndexPath:indexPathForDate atScrollPosition:UICollectionViewScrollPositionLeft animated:NO];
////            CGPoint point = self.dateCollectionView.contentOffset;
////
////            CGSize cellSize = [self collectionView:self.dateCollectionView layout:self.dateCollectionView.collectionViewLayout sizeForItemAtIndexPath:indexPathForDate];
////
////            UIEdgeInsets insets = [self collectionView:self.dateCollectionView layout:self.dateCollectionView.collectionViewLayout insetForSectionAtIndex:indexPathForDate.section];
////
////            //FIXME: This is a placeholder for an appropriate offset.
////            NSInteger multiplierForOffset = abs(self.selectedDate.weekday - [NSDate date].weekday);
////            point .x -= multiplierForOffset * (cellSize.width + insets.left + insets.right) + (insets.left * 3/2);
////            self.dateCollectionView.contentOffset = point;
////            [self.dateCollectionView reloadData];
//
//    //[self selectInitialCell];
//}

//- (void)selectInitialCell {
//
//    NSInteger indexForDate = [self.selectedDate daysFrom:[NSDate date]] + 1;
//    NSIndexPath *indexPathForDate = [NSIndexPath indexPathForRow:indexForDate inSection:0];
//
//    NSArray *visibleIndexPaths = [self.dateCollectionView indexPathsForVisibleItems];
//
//    if (![visibleIndexPaths containsObject:indexPathForDate]) {
//
//        [self.dateCollectionView scrollToItemAtIndexPath:indexPathForDate atScrollPosition:UICollectionViewScrollPositionLeft animated:NO];
//        CGPoint point = self.dateCollectionView.contentOffset;
//
//        CGSize cellSize = [self collectionView:self.dateCollectionView layout:self.dateCollectionView.collectionViewLayout sizeForItemAtIndexPath:indexPathForDate];
//
//        UIEdgeInsets insets = [self collectionView:self.dateCollectionView layout:self.dateCollectionView.collectionViewLayout insetForSectionAtIndex:indexPathForDate.section];
//
//        //FIXME: This is a placeholder for an appropriate offset.
//        NSInteger multiplierForOffset = abs(self.selectedDate.weekday - [NSDate date].weekday);
//        point .x -= multiplierForOffset * (cellSize.width + insets.left + insets.right) + (insets.left * 3/2);
//        self.dateCollectionView.contentOffset = point;
//        [self.dateCollectionView reloadData];
//    }
//}


/*
// Uncomment this method to specify if the specified item should be highlighted during tracking
- (BOOL)collectionView:(UICollectionView *)collectionView shouldHighlightItemAtIndexPath:(NSIndexPath *)indexPath {
return YES;
}
*/

/*
// Uncomment this method to specify if the specified item should be selected
- (BOOL)collectionView:(UICollectionView *)collectionView shouldSelectItemAtIndexPath:(NSIndexPath *)indexPath {
return YES;
}
*/

/*
// Uncomment these methods to specify if an action menu should be displayed for the specified item, and react to actions performed on the item
- (BOOL)collectionView:(UICollectionView *)collectionView shouldShowMenuForItemAtIndexPath:(NSIndexPath *)indexPath {
return NO;
}

- (BOOL)collectionView:(UICollectionView *)collectionView canPerformAction:(SEL)action forItemAtIndexPath:(NSIndexPath *)indexPath withSender:(id)sender {
return NO;
}

- (void)collectionView:(UICollectionView *)collectionView performAction:(SEL)action forItemAtIndexPath:(NSIndexPath *)indexPath withSender:(id)sender {

}
*/
